<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productMapper">

	<!-- 게시판 리스트 -->
	<select id="selectproductlist" resultType="com.green.ffee.product.vo.ProductFileVO" parameterType="com.green.ffee.sns.vo.SearchCriteria">
	
		<!-- SELECT  PRODUCT_ID,STORED_FILE_NAME,PRODUCT_NAME,PRODUCT_PRICE,CNT FROM (
		
		   SELECT 
                F.FILE_NO,
                F.PRODUCT_ID,
                F.ORG_FILE_NAME,
                F.STORED_FILE_NAME,
                P.PRODUCT_NAME,
                P.PRODUCT_PRICE,
                ROW_NUMBER() OVER ( PARTITION BY P.PRODUCT_ID ORDER BY F.FILE_NO ) CNT
            FROM PRODUCT_FILE F,TBL_PRODUCT P
            WHERE P.PRODUCT_ID = F.PRODUCT_ID
            AND  1 = 1
		)
		WHERE CNT=1
        ORDER BY PRODUCT_ID DESC -->
        
        <!-- SELECT  
           PRODUCT_ID,
           STORED_FILE_NAME,
           PRODUCT_NAME,
           PRODUCT_PRICE,
           
           RNUM 
           FROM (
		
               SELECT 
                    F.FILE_NO,
                    F.PRODUCT_ID,
                    F.ORG_FILE_NAME,
                    F.STORED_FILE_NAME,
                    P.PRODUCT_NAME,
                    P.PRODUCT_PRICE,
                    ROW_NUMBER() OVER ( PARTITION BY F.PRODUCT_ID ORDER BY F.FILE_NO ) CNT,
                    ROW_NUMBER() OVER(ORDER BY P.PRODUCT_ID ) AS RNUM
                FROM PRODUCT_FILE F,TBL_PRODUCT P
                WHERE P.PRODUCT_ID = F.PRODUCT_ID
                AND 1 =1
              <include refid="pdsearch"></include>
            )
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
        AND CNT =1
        ORDER BY PRODUCT_ID -->
		
		
		<!-- 상품 페이징 수정 -->
		 SELECT * FROM( SELECT  
               PRODUCT_ID,
               STORED_FILE_NAME,
               PRODUCT_NAME,
               PRODUCT_PRICE,
               PRODUCT_PRICE2,
               PRODUCT_TAG,
               CNT,
               ROW_NUMBER() OVER(ORDER BY PRODUCT_ID DESC) AS RNUM 
           FROM (
		
               SELECT 
                    F.FILE_NO,
                    P.PRODUCT_ID,
                    F.ORG_FILE_NAME,
                    F.STORED_FILE_NAME,
                    P.PRODUCT_NAME,
                    P.PRODUCT_PRICE,
                    P.PRODUCT_PRICE2,
                    P.PRODUCT_TAG,
                    ROW_NUMBER() OVER ( PARTITION BY F.PRODUCT_ID ORDER BY F.FILE_NO) CNT
                    
                FROM PRODUCT_FILE F,TBL_PRODUCT P
                WHERE P.PRODUCT_ID = F.PRODUCT_ID
              	<include refid="pdsearch"></include>
            )T
		
        WHERE T.CNT =1
        )TT
        WHERE TT.RNUM BETWEEN #{rowStart} AND #{rowEnd}
	</select>
	
	<!-- snslist 페이징 넘버링 -->
	<select id="listCount" parameterType="com.green.ffee.vo.SearchCriteria" resultType="int">
		SELECT COUNT(P.PRODUCT_ID)      
		FROM PRODUCT_FILE F,TBL_PRODUCT P     
		WHERE P.PRODUCT_ID = F.PRODUCT_ID
		AND 1=1
		<include refid="pdsearch"></include>
        AND P.PRODUCT_ID > 0
			
	</select>
	
	<!-- snslist 검색어창 -->
	<sql id="pdsearch">
		<if test="searchType != null">
			<if test="searchType == 'pn'.toString()">AND P.product_name LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>


	<!-- 게시판 글 작성 -->
	<insert id="insert" parameterType="com.green.ffee.product.vo.ProductVO" useGeneratedKeys="true" keyProperty="product_id">
	
	<!-- 자동증가  -->
    <selectKey keyProperty="product_id" resultType="int" order="BEFORE">
    	SELECT SEQ_PRODUCT.NEXTVAL FROM DUAL
    </selectKey>
	INSERT INTO TBL_PRODUCT(
						     PRODUCT_ID
						    ,PRODUCT_NAME
						    ,PRODUCT_PRICE
						    ,PRODUCT_PRICE2
						    ,PRODUCT_TAG
						    ,PRODUCT_DESC )
						    
				     VALUES(   #{product_id}
				    		 , #{product_name}
				             , #{product_price}
				             , #{product_price2}
				             , #{product_tag}
				    		 , #{product_desc} 
				   		 )

    </insert>
   
   <!-- 파일 넣기  -->
    <insert id="insertFile" parameterType="hashMap">
		
		INSERT INTO PRODUCT_FILE(
			FILE_NO,
            PRODUCT_ID,
            ORG_FILE_NAME,
            STORED_FILE_NAME,
            FILE_SIZE
		)VALUES(
			SEQ_PRODUCT_FILE.NEXTVAL,
			#{PRODUCT_ID},
			#{ORG_FILE_NAME},
			#{STORED_FILE_NAME},
			#{FILE_SIZE}
		)
		
    </insert>
   
   <!-- 게시글 목록 조회 -->
    <select id="read" parameterType="int" resultType="com.green.ffee.product.vo.ProductVO">
    	SELECT   PRODUCT_ID
		        ,PRODUCT_NAME
		        ,PRODUCT_PRICE
		        ,PRODUCT_PRICE2
		        ,PRODUCT_TAG
		        ,PRODUCT_DESC
	  	 FROM TBL_PRODUCT
		 WHERE PRODUCT_ID = #{product_id}
		 
    </select>
    
    <!-- 첨부파일조회 -->
    <select id="selectFileList" parameterType="int" resultType="com.green.ffee.product.vo.ProductFileVO">
		   	SELECT FILE_NO,
			       ORG_FILE_NAME,
			       STORED_FILE_NAME,
			       ROUND(FILE_SIZE/1024,1) AS FILE_SIZE
			 FROM PRODUCT_FILE
			 WHERE PRODUCT_ID = #{product_id}
			 AND DEL_GB = 'N'
    </select>

    <!-- 썸네일첨부파일조회 -->
    <select id="selectThumnailFile" parameterType="int" resultType="com.green.ffee.product.vo.ProductFileVO">
		   SELECT FILE_NO, STORED_FILE_NAME,CNT FROM(
        SELECT   
               FILE_NO,
               PRODUCT_ID,
               ORG_FILE_NAME,
               STORED_FILE_NAME,
               ROW_NUMBER() OVER ( PARTITION BY PRODUCT_ID ORDER BY FILE_NO ) CNT   
         FROM PRODUCT_FILE
         
		 )
		 WHERE PRODUCT_ID = #{product_id}
		 AND CNT=1
		 ORDER BY PRODUCT_ID DESC
    </select>

	<!-- 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE 
		  FROM PRODUCT_FILE
		 WHERE PRODUCT_ID = #{product_id}
	</delete>
</mapper>